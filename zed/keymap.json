[
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in normal & visual mode
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work only in normal mode
      "shift-k": "editor::Hover",
      "space c a": "editor::ToggleCodeActions",
      "space c f": "editor::Format",
      "space c r": "editor::Rename",
      "space c d": "diagnostics::Deploy",
      "space c i": "editor::ToggleInlayHints",
      "space f": "file_finder::Toggle",
      "space o": "tab_switcher::Toggle",
      "space e": "workspace::ToggleRightDock",
      "space v": "editor::GoToDefinitionSplit",
      // Close active panel
      "space b d": "pane::CloseActiveItem",
      // Ctrl jklk to move between panes
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"],
      // Switch between buffers
      "shift-h": "pane::ActivatePrevItem",
      "shift-l": "pane::ActivateNextItem",
      // LSP
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPrevDiagnostic",
      // Symbol search
      "space s s": "outline::Toggle",
      "z a": "editor::Fold",
      "z x": "editor::UnfoldLines"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "space e": "workspace::ToggleRightDock"
      // "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      // "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      // "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      // "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    "context": "Dock || Terminal",
    "bindings": {
      "space e": "workspace::ToggleRightDock",
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  // Toggle terminal
  {
    "context": "Workspace",
    "bindings": {
      // Toggle terminal
      "ctrl-\\": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "shift-k": "editor::MoveLineUp",
      "shift-j": "editor::MoveLineDown"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "w": "vim::NextSubwordStart",
      "b": "vim::PreviousSubwordStart",
      "e": "vim::NextSubwordEnd",
      "g e": "vim::PreviousSubwordEnd"
    }
  },
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in insert mode
      // e.g.
      // "j j": "vim::NormalBefore" // remap jj in insert mode to escape.
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // put key-bindings here (in addition to above) if you want them to
      // work when no editor exists
      // e.g.
      "space f": "file_finder::Toggle",
      "space e": "workspace::ToggleRightDock"
    }
  }
]
